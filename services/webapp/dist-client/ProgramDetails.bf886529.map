{"version":3,"sources":["src/features/mobile-programs/containers/ProgramDetails.jsx"],"names":["mapState","state","match","program","programs","items","find","i","id","params","programId","isNotFound","Boolean","length","mapDispatch","dispatch","history","loadPrograms","goBack","push","onDisclose","item","url","title","ProgramsDetails","React","PureComponent","props","trainings","renderBody","programType","PropTypes","shape","string","isRequired","propTypes","func","bool","defaultProps"],"mappings":"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","file":"ProgramDetails.bf886529.map","sourceRoot":"..","sourcesContent":["/* eslint react/prefer-stateless-function: off */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport slugify from 'slugify'\nimport MobilePage, { Padding, List, Text } from 'lib/MobilePage'\nimport { updatePrograms } from '../programs.service'\n\nconst mapState = (state, { match }) => {\n    const program = state.programs.items.find(i => i.id === match.params.programId)\n    return {\n        program,\n        isNotFound: Boolean(!program && state.programs.items.length),\n    }\n}\n\nconst mapDispatch = (dispatch, { history, match }) => {\n    return {\n        loadPrograms: () => dispatch(updatePrograms()),\n        goBack: () => history.push('/welcome'),\n        onDisclose: (item) =>\n            history.push(`${match.url}/${item.id}/${slugify(item.title)}`),\n    }\n}\n\nclass ProgramsDetails extends React.PureComponent {\n    componentDidMount () {\n        if (!this.props.program) this.props.loadPrograms()\n    }\n\n    renderBody () {\n        if (this.props.isNotFound) {\n            return (\n                <Text onClick={this.props.goBack}>\n                    program not found, click here to go to the list\n                </Text>\n            )\n        }\n\n        if (!this.props.program) {\n            return (\n                <Text>loading...</Text>\n            )\n        }\n\n        return (\n            <List\n                items={this.props.program.trainings}\n                subtitleProp={'duration'}\n                onDisclose={(item) => this.props.onDisclose(item)}\n            />\n        )\n    }\n\n    render () {\n        return (\n            <MobilePage>\n                <MobilePage.Header>\n                    {this.props.program ? this.props.program.title : '...'}\n                </MobilePage.Header>\n                <MobilePage.Body>\n                    <Padding>\n                        {this.renderBody()}\n                    </Padding>\n                </MobilePage.Body>\n            </MobilePage>\n        )\n    }\n}\n\nconst programType = PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n})\n\nProgramsDetails.propTypes = {\n    loadPrograms: PropTypes.func.isRequired,\n    goBack: PropTypes.func.isRequired,\n    onDisclose: PropTypes.func.isRequired,\n    program: programType,\n    isNotFound: PropTypes.bool.isRequired,\n}\n\nProgramsDetails.defaultProps = {\n    program: null,\n}\n\nexport default connect(mapState, mapDispatch)(ProgramsDetails)\n"]}